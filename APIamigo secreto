
#Instale as dependências necessárias:
npm install express body-parser
npm install nodemailer


#API de Lista de Desejos

const express = require('express');
const bodyParser = require('body-parser');

const app = express();
const port = 3000;

app.use(bodyParser.json());

let wishlist = [];

// Inserir item na lista
app.post('/wishlist', (req, res) => {
    const { item } = req.body;
    if (item) {
        wishlist.push(item);
        return res.status(201).json({ message: 'Item adicionado com sucesso!', wishlist });
    }
    return res.status(400).json({ message: 'Nenhum item fornecido!' });
});

// Remover item da lista
app.delete('/wishlist', (req, res) => {
    const { item } = req.body;
    const index = wishlist.indexOf(item);
    if (index > -1) {
        wishlist.splice(index, 1);
        return res.status(200).json({ message: 'Item removido com sucesso!', wishlist });
    }
    return res.status(404).json({ message: 'Item não encontrado!' });
});

// Mostrar itens da lista
app.get('/wishlist', (req, res) => {
    return res.status(200).json({ wishlist });
});

app.listen(port, () => {
    console.log(`API de lista de desejos rodando na porta ${port}`);
});



#API de Convite

const express = require('express');
const bodyParser = require('body-parser');
const nodemailer = require('nodemailer');

const app = express();
const port = 3001;

app.use(bodyParser.json());

// Configurações de e-mail
const transporter = nodemailer.createTransport({
    service: 'gmail', // ou qualquer outro serviço de e-mail
    auth: {
        user: 'seu_email@gmail.com',
        pass: 'sua_senha'
    }
});

// Método conviteEmail
app.post('/convite', (req, res) => {
    const { email, nome } = req.body;
    if (!email) {
        return res.status(400).json({ message: 'Endereço de e-mail não fornecido!' });
    }

    const mailOptions = {
        from: 'seu_email@gmail.com',
        to: email,
        subject: 'Convite para Amigo Secreto',
        text: `Olá ${nome || 'Amigo Secreto'},\n\nVocê foi convidado para participar de um Amigo Secreto!\n\nSaudações,\nOrganizador`
    };

    transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
            return res.status(500).json({ message: `Falha ao enviar e-mail: ${error.message}` });
        }
        return res.status(200).json({ message: 'Convite enviado com sucesso!' });
    });
});

app.listen(port, () => {
    console.log(`API de convite rodando na porta ${port}`);
});
